
'use client';
import React, { useEffect, useRef, useState } from 'react';
import { DataTable } from 'primereact/datatable';
import { Column } from 'primereact/column';
import { Calendar } from 'primereact/calendar';
import { Toast } from 'primereact/toast';

// Sample order data
const sampleOrders = [
    {
        id: 1,
        created_at: "2023-10-03T12:32:33.000000Z",
        total_price: 100.00,
        items: [
            { id: 1, product: { name: 'Product 1' }, quantity: 2, price: 50.00 },
            { id: 2, product: { name: 'Product 2' }, quantity: 1, price: 50.00 },
        ],
        status: "completed"
    },
    {
        id: 2,
        created_at: "2024-10-04T12:32:33.000000Z",
        total_price: 75.00,
        items: [
            { id: 3, product: { name: 'Product 3' }, quantity: 1, price: 75.00 },
        ],
        status: "new"
    },
    {
        id: 3,
        created_at: "2024-10-05T12:32:33.000000Z",
        total_price: 150.00,
        items: [
            { id: 4, product: { name: 'Product 4' }, quantity: 3, price: 50.00 },
        ],
        status: "in progress"
    },
];
const OrderPage = () => {
    const [orders, setOrders] = useState(sampleOrders);
    const [filteredOrders, setFilteredOrders] = useState(sampleOrders);
    const [dateRange, setDateRange] = useState({ from: null, to: null });
    const toast = useRef(null);

    // Handle date change in filter UI
    const onDateChange = (value, field) => {
        const updatedDateRange = { ...dateRange, [field]: value };
        setDateRange(updatedDateRange); // Update state

        // Filter orders based on the updated date range
        filterOrders(updatedDateRange);
    };

    // Filter orders based on selected date range
    const filterOrders = (range) => {
        const { from, to } = range;

        const filtered = orders.filter(order => {
            const orderDate = new Date(order.created_at); // Convert created_at to Date object
            return (
                (!from || orderDate >= from) && // Compare Date objects directly
                (!to || orderDate <= to)
            );
        });

        setFilteredOrders(filtered); // Update filtered orders
    };


    // Format date as "YYYY-MM-DD"
    const formatDate = (dateString) => {
        return dateString; // Return date as is, already in "YYYY-MM-DD" format
    };

    return (
        <div className="card">
            <Toast ref={toast} />

            <div className="p-grid p-nogutter mb-3">
                <div className="p-col-6">
                <Calendar
    value={dateRange.from}
    onChange={(e) => onDateChange(e.value, 'from')} // e.value is already a Date object
    placeholder="From"
    dateFormat="yy-mm-dd" // Display format
    className="p-column-filter"
/>
                </div>
                <div className="p-col-6">
                <Calendar
    value={dateRange.to}
    onChange={(e) => onDateChange(e.value, 'to')} // e.value is already a Date object
    placeholder="To"
    dateFormat="yy-mm-dd"
    className="p-column-filter"
/>
                    />
                </div>
            </div>

            <DataTable
                value={filteredOrders} // Use filtered orders for the table
                paginator
                rows={10}
                emptyMessage="No orders found."
            >
                <Column field="id" header="Order ID" sortable />
                <Column
                    field="created_at"
                    header="Created At"
                    body={(rowData) => formatDate(rowData.created_at)} // Format date for display
                    sortable
                />
                <Column
                    field="items"
                    header="Items"
                    body={(rowData) => (
                        <ul>
                            {rowData.items.map(item => (
                                <li key={item.id}>
                                    {item.product.name} - Quantity: {item.quantity} - Price: {item.price}
                                </li>
                            ))}
                        </ul>
                    )}
                />
                <Column field="total_price" header="Total Price" sortable />
                <Column field="status" header="Status" sortable />
            </DataTable>
        </div>
    );
};

export default OrderPage;
